<?php

function get_analytics()
{
    ?>
    <!-- <script>
    (function(f,i,r,e,s,h,l){i['GoogleAnalyticsObject']=s;f[s]=f[s]||function(){
    (f[s].q=f[s].q||[]).push(arguments)},f[s].l=1*new Date();h=i.createElement(r),
    l=i.getElementsByTagName(r)[0];h.async=1;h.src=e;l.parentNode.insertBefore(h,l)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-XXXXXXXX-XX', 'yourdomain.com');
    ga('send', 'pageview');
    </script> -->
    <?php
}

if (!isset($content_width))
{
    $content_width = 900;
}

if (function_exists('add_theme_support'))
{
    // Add Menu Support
    add_theme_support('menus');

    // Add Thumbnail Theme Support
    add_theme_support('post-thumbnails');
    add_image_size('large', 700, '', true); // Large Thumbnail
    add_image_size('medium', 250, '', true); // Medium Thumbnail
    add_image_size('small', 120, '', true); // Small Thumbnail
    add_image_size('custom-size', 700, 200, true); // Custom Thumbnail Size call using the_post_thumbnail('custom-size');

    // Add Support for Custom Backgrounds - Uncomment below if you're going to use
    /*add_theme_support('custom-background', array(
	'default-color' => 'FFF',
	'default-image' => get_template_directory_uri() . '/img/bg.jpg'
    ));*/

    // Add Support for Custom Header - Uncomment below if you're going to use
    /*add_theme_support('custom-header', array(
	'default-image'			=> get_template_directory_uri() . '/img/headers/default.jpg',
	'header-text'			=> false,
	'default-text-color'		=> '000',
	'width'				=> 1000,
	'height'			=> 198,
	'random-default'		=> false,
	'wp-head-callback'		=> $wphead_cb,
	'admin-head-callback'		=> $adminhead_cb,
	'admin-preview-callback'	=> $adminpreview_cb
    ));*/

    // Enables post and comment RSS feed links to head
    add_theme_support('automatic-feed-links');

    // Localisation Support
    load_theme_textdomain('html5blank', get_template_directory() . '/languages');
}

/*------------------------------------*\
	Functions
\*------------------------------------*/
add_action( 'login_head', 'paraluman_favicons' );
add_action('admin_head', 'paraluman_favicons');
add_action( 'wp_head', 'paraluman_favicons' );
function paraluman_favicons()
{ ?>
    <!-- Favicons -->
    <link rel="apple-touch-icon" sizes="57x57" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-57x57.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="60x60" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-60x60.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="72x72" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-72x72.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="76x76" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-76x76.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="114x114" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-114x114.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="120x120" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-120x120.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="144x144" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-144x144.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="152x152" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-152x152.png?v=1.0.0.0">
    <link rel="apple-touch-icon" sizes="180x180" href="<?php echo get_template_directory_uri(); ?>/img/icons/apple-touch-icon-180x180.png?v=1.0.0.0">
    <link rel="icon" type="image/png" href="<?php echo get_template_directory_uri(); ?>/img/icons/favicon-32x32.png?v=1.0.0.0" sizes="32x32">
    <link rel="icon" type="image/png" href="<?php echo get_template_directory_uri(); ?>/img/icons/favicon-96x96.png?v=1.0.0.0" sizes="96x96">
    <link rel="icon" type="image/png" href="<?php echo get_template_directory_uri(); ?>/img/icons/favicon-16x16.png?v=1.0.0.0" sizes="16x16">
    <link rel="manifest" href="<?php echo get_template_directory_uri(); ?>/img/icons/manifest.json?v=1.0.0.0">
    <link rel="mask-icon" href="<?php echo get_template_directory_uri(); ?>/img/icons/safari-pinned-tab.svg?v=1.0.0.0" color="#ee3025">
    <link rel="shortcut icon" href="<?php echo get_template_directory_uri(); ?>/img/icons/favicon.ico?v=1.0.0.0">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="<?php echo get_template_directory_uri(); ?>/img/icons/mstile-144x144.png?v=1.0.0.0">
    <meta name="msapplication-config" content="<?php echo get_template_directory_uri(); ?>/img/icons/browserconfig.xml?v=1.0.0.0">
    <meta name="theme-color" content="#ffffff">
    <?php
}

// HTML5 Blank navigation
function html5blank_nav()
{
	wp_nav_menu(
	array(
		'theme_location'  => 'header-menu',
		'menu'            => '',
		'container'       => 'div',
		'container_class' => 'menu-{menu slug}-container',
		'container_id'    => '',
		'menu_class'      => 'menu',
		'menu_id'         => '',
		'echo'            => true,
		'fallback_cb'     => 'wp_page_menu',
		'before'          => '',
		'after'           => '',
		'link_before'     => '',
		'link_after'      => '',
		'items_wrap'      => '<ul>%3$s</ul>',
		'depth'           => 0,
		'walker'          => ''
		)
	);
}

function landing_nav()
{
    wp_nav_menu(
    array(
        'theme_location'  => 'landing-menu',
        'menu'            => '',
        'container'       => 'div',
        'container_class' => 'menu-{menu slug}-container',
        'container_id'    => '',
        'menu_class'      => 'menu',
        'menu_id'         => '',
        'echo'            => true,
        'fallback_cb'     => 'wp_page_menu',
        'before'          => '',
        'after'           => '',
        'link_before'     => '',
        'link_after'      => '',
        'items_wrap'      => '<ul class="menu-list">%3$s</ul>',
        'depth'           => 0,
        'walker'          => ''
        )
    );
}

function main_nav($menu_location='main-menu')
{
    wp_nav_menu(
    array(
        'theme_location'  => $menu_location,
        'menu'            => '',
        'container'       => 'div',
        'container_class' => 'menu-{menu slug}-container',
        'container_id'    => '',
        'menu_class'      => 'menu',
        'menu_id'         => '',
        'echo'            => true,
        'fallback_cb'     => 'wp_page_menu',
        'before'          => '',
        'after'           => '',
        'link_before'     => '',
        'link_after'      => '',
        'items_wrap'      => '<ul class="menu-list">%3$s</ul>',
        'depth'           => 0,
        'walker'          => ''
        )
    );
}

function social_nav()
{
    wp_nav_menu(
    array(
        'theme_location'  => 'social-menu',
        'menu'            => '',
        'container'       => 'div',
        'container_class' => 'menu-{menu slug}-container',
        'container_id'    => '',
        'menu_class'      => 'menu',
        'menu_id'         => '',
        'echo'            => true,
        'fallback_cb'     => 'wp_page_menu',
        'before'          => '',
        'after'           => '',
        'link_before'     => '<i class="',
        'link_after'      => '"></i>',
        'items_wrap'      => '<ul class="social-menu">%3$s</ul>',
        'depth'           => 0,
        'walker'          => ''
        )
    );
}

add_action( 'login_enqueue_scripts', 'paralikha_enqueue_style', 10 );
add_action( 'login_enqueue_scripts', 'paralikha_enqueue_script', 1 );
function paralikha_enqueue_style() {
    wp_enqueue_style( 'paralikha-login', get_template_directory_uri() . '/login.css', false, '3.0.0' );
}
function paralikha_enqueue_script()
{
    wp_enqueue_script( 'paralikha-login', get_template_directory_uri() . '/js/login.js', true, '3.0.0' );
}


add_action( 'admin_head', 'html5blank_admin_styles_collection' );
function html5blank_admin_styles_collection() {
    // wp_enqueue_style( 'paralikha-editor', get_template_directory_uri() . '/editor-style.css', false, '3.0.1' );
    wp_register_script('paralikha-admin', get_template_directory_uri() . '/js/admin.js', array(), '4.3.0'); // Conditionizr
    wp_enqueue_script('paralikha-admin'); // Enqueue it!
}

function paralikha_theme_add_editor_styles() {
    add_editor_style( get_template_directory_uri() . '/editor-style.css' );
}
add_action( 'init', 'paralikha_theme_add_editor_styles' );

// Load HTML5 Blank scripts (header.php)
function html5blank_header_scripts()
{
    if ($GLOBALS['pagenow'] != 'wp-login.php' && !is_admin()) {

    	wp_register_script('conditionizr', get_template_directory_uri() . '/js/lib/conditionizr-4.3.0.min.js', array(), '4.3.0'); // Conditionizr
        wp_enqueue_script('conditionizr'); // Enqueue it!

        wp_register_script('modernizr', get_template_directory_uri() . '/js/lib/modernizr-2.7.1.min.js', array(), '2.7.1'); // Modernizr
        wp_enqueue_script('modernizr'); // Enqueue it!

        wp_register_script('animatron', "http://player.animatron.com/latest/bundle/animatron.min.js", array(), '2.7.1'); // Animatron
        wp_enqueue_script('animatron'); // Enqueue it!

    }
}

// Load HTML5 Blank conditional scripts
function html5blank_conditional_scripts()
{
    wp_register_script('grid', get_template_directory_uri() . '/vendor/grid/js/grid.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('grid'); // Enqueue it!

    wp_register_script('bootstrap', get_template_directory_uri() . '/vendor/bootstrap/dist/js/bootstrap.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('bootstrap'); // Enqueue it!

    wp_register_script('niceScroll', get_template_directory_uri() . '/vendor/jquery.nicescroll/dist/jquery.nicescroll.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('niceScroll'); // Enqueue it!

    wp_register_script('smoothState', get_template_directory_uri() . '/vendor/smoothState.js/jquery.smoothState.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('smoothState'); // Enqueue it!

    wp_register_script('jquery-easing', get_template_directory_uri() . '/vendor/fullpage.js/vendors/jquery.easings.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('jquery-easing'); // Enqueue it!

    wp_register_script('lity', get_template_directory_uri() . '/vendor/lity/dist/lity.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('lity'); // Enqueue it!

    wp_register_script('scrollOverflow', get_template_directory_uri() . '/vendor/fullpage.js/vendors/scrolloverflow.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('scrollOverflow'); // Enqueue it!

    wp_register_script('fullpage', get_template_directory_uri() . '/vendor/fullpage.js/dist/jquery.fullpage.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('fullpage'); // Enqueue it!

    wp_register_script('scripts', get_template_directory_uri() . '/js/scripts.min.js', array('jquery'), '1.0.0', true); // Conditional script(s)
    wp_enqueue_script('scripts'); // Enqueue it!
}

// Load HTML5 Blank styles
function html5blank_styles()
{
    wp_register_style('grid', get_template_directory_uri() . '/vendor/grid/css/component.css', array(), '1.0', 'all');
    wp_enqueue_style('grid'); // Enqueue it!

    wp_register_style('grid-default', get_template_directory_uri() . '/vendor/grid/css/default.css', array(), '1.0', 'all');
    wp_enqueue_style('grid-default'); // Enqueue it!

    wp_register_style('normalize', get_template_directory_uri() . '/normalize.css', array(), '1.0', 'all');
    wp_enqueue_style('normalize'); // Enqueue it!

    wp_register_style('animate.css', get_template_directory_uri() . '/vendor/animate.css/animate.min.css', array(), '1.0', 'all');
    wp_enqueue_style('animate.css'); // Enqueue it!

    wp_register_style('lity', get_template_directory_uri() . '/vendor/lity/dist/lity.min.css', array(), '1.0', 'all');
    wp_enqueue_style('lity'); // Enqueue it!

    wp_register_style('font-awesome', get_template_directory_uri() . '/vendor/font-awesome/css/font-awesome.min.css', array(), '1.0', 'all');
    wp_enqueue_style('font-awesome'); // Enqueue it!

    wp_register_style('fullpage', get_template_directory_uri() . '/vendor/fullpage.js/dist/jquery.fullpage.min.css', array(), '1.0', 'all');
    wp_enqueue_style('fullpage'); // Enqueue it!

    wp_register_style('paralikha', get_template_directory_uri() . '/app.min.css', array(), '1.0', 'all');
    wp_enqueue_style('paralikha'); // Enqueue it!

    wp_register_style('style', get_template_directory_uri() . '/style.css', array(), '1.0', 'all');
    wp_enqueue_style('style'); // Enqueue it!

}

// Register HTML5 Blank Navigation
function register_html5_menu()
{
    register_nav_menus(array( // Using array to specify more menus if needed
        'landing-menu' => __('Landing Page Menu', 'html5blank'),
        'main-menu' => __('Main Menu', 'html5blank'),
        'social-menu' => __('Social Menu', 'html5blank'),
        'header-menu' => __('Header Menu', 'html5blank'), // Main Navigation
        'sidebar-menu' => __('Sidebar Menu', 'html5blank'), // Sidebar Navigation
        'extra-menu' => __('Extra Menu', 'html5blank') // Extra Navigation if needed (duplicate as many as you need!)
    ));
}

// Remove the <div> surrounding the dynamic navigation to cleanup markup
function my_wp_nav_menu_args($args = '')
{
    $args['container'] = false;
    return $args;
}

// Remove Injected classes, ID's and Page ID's from Navigation <li> items
function my_css_attributes_filter($var)
{
    return is_array($var) ? array() : '';
}

// Remove invalid rel attribute values in the categorylist
function remove_category_rel_from_category_list($thelist)
{
    return str_replace('rel="category tag"', 'rel="tag"', $thelist);
}

// Add page slug to body class, love this - Credit: Starkers Wordpress Theme
function add_slug_to_body_class($classes)
{
    global $post;
    if (is_home()) {
        $key = array_search('blog', $classes);
        if ($key > -1) {
            unset($classes[$key]);
        }
    } elseif (is_page()) {
        $classes[] = sanitize_html_class($post->post_name);
    } elseif (is_singular()) {
        $classes[] = sanitize_html_class($post->post_name);
    }

    return $classes;
}

// If Dynamic Sidebar Exists
if (function_exists('register_sidebar'))
{
    // Define Sidebar Widget Area 1
    register_sidebar(array(
        'name' => __('Widget Area 1', 'html5blank'),
        'description' => __('Description for this widget-area...', 'html5blank'),
        'id' => 'widget-area-1',
        'before_widget' => '<div id="%1$s" class="%2$s">',
        'after_widget' => '</div>',
        'before_title' => '<h3>',
        'after_title' => '</h3>'
    ));

    // Define Sidebar Widget Area 2
    register_sidebar(array(
        'name' => __('Widget Area 2', 'html5blank'),
        'description' => __('Description for this widget-area...', 'html5blank'),
        'id' => 'widget-area-2',
        'before_widget' => '<div id="%1$s" class="%2$s">',
        'after_widget' => '</div>',
        'before_title' => '<h3>',
        'after_title' => '</h3>'
    ));
}

// Remove wp_head() injected Recent Comment styles
function my_remove_recent_comments_style()
{
    global $wp_widget_factory;
    remove_action('wp_head', array(
        $wp_widget_factory->widgets['WP_Widget_Recent_Comments'],
        'recent_comments_style'
    ));
}

// Pagination for paged posts, Page 1, Page 2, Page 3, with Next and Previous Links, No plugin
function html5wp_pagination()
{
    global $wp_query;
    $big = 999999999;
    echo paginate_links(array(
        'base' => str_replace($big, '%#%', get_pagenum_link($big)),
        'format' => '?paged=%#%',
        'current' => max(1, get_query_var('paged')),
        'total' => $wp_query->max_num_pages
    ));
}

// Custom Excerpts
function html5wp_index($length) // Create 20 Word Callback for Index page Excerpts, call using html5wp_excerpt('html5wp_index');
{
    return 20;
}

// Create 40 Word Callback for Custom Post Excerpts, call using html5wp_excerpt('html5wp_custom_post');
function html5wp_custom_post($length)
{
    return 40;
}

// Create the Custom Excerpts callback
function html5wp_excerpt($length_callback = '', $more_callback = '')
{
    global $post;
    if (function_exists($length_callback)) {
        add_filter('excerpt_length', $length_callback);
    }
    if (function_exists($more_callback)) {
        add_filter('excerpt_more', $more_callback);
    }
    $output = get_the_excerpt();
    $output = apply_filters('wptexturize', $output);
    $output = apply_filters('convert_chars', $output);
    $output = '<p>' . $output . '</p>';
    echo $output;
}

// Custom View Article link to Post
function html5_blank_view_article($more)
{
    global $post;
    return '... <a class="view-article" href="' . get_permalink($post->ID) . '">' . __('View Article', 'html5blank') . '</a>';
}

// Remove Admin bar
function remove_admin_bar()
{
    return false;
}

// Remove 'text/css' from our enqueued stylesheet
function html5_style_remove($tag)
{
    return preg_replace('~\s+type=["\'][^"\']++["\']~', '', $tag);
}

// Remove thumbnail width and height dimensions that prevent fluid images in the_thumbnail
function remove_thumbnail_dimensions( $html )
{
    $html = preg_replace('/(width|height)=\"\d*\"\s/', "", $html);
    return $html;
}

// Custom Gravatar in Settings > Discussion
function html5blankgravatar ($avatar_defaults)
{
    $myavatar = get_template_directory_uri() . '/img/gravatar.jpg';
    $avatar_defaults[$myavatar] = "Custom Gravatar";
    return $avatar_defaults;
}

// Threaded Comments
function enable_threaded_comments()
{
    if (!is_admin()) {
        if (is_singular() AND comments_open() AND (get_option('thread_comments') == 1)) {
            wp_enqueue_script('comment-reply');
        }
    }
}

// Custom Comments Callback
function html5blankcomments($comment, $args, $depth)
{
	$GLOBALS['comment'] = $comment;
	extract($args, EXTR_SKIP);

	if ( 'div' == $args['style'] ) {
		$tag = 'div';
		$add_below = 'comment';
	} else {
		$tag = 'li';
		$add_below = 'div-comment';
	}
?>
    <!-- heads up: starting < for the html tag (li or div) in the next line: -->
    <<?php echo $tag ?> <?php comment_class(empty( $args['has_children'] ) ? '' : 'parent') ?> id="comment-<?php comment_ID() ?>">
	<?php if ( 'div' != $args['style'] ) : ?>
	<div id="div-comment-<?php comment_ID() ?>" class="comment-body">
	<?php endif; ?>
	<div class="comment-author vcard">
	<?php if ($args['avatar_size'] != 0) echo get_avatar( $comment, $args['180'] ); ?>
	<?php printf(__('<cite class="fn">%s</cite> <span class="says">says:</span>'), get_comment_author_link()) ?>
	</div>
<?php if ($comment->comment_approved == '0') : ?>
	<em class="comment-awaiting-moderation"><?php _e('Your comment is awaiting moderation.') ?></em>
	<br />
<?php endif; ?>

	<div class="comment-meta commentmetadata"><a href="<?php echo htmlspecialchars( get_comment_link( $comment->comment_ID ) ) ?>">
		<?php
			printf( __('%1$s at %2$s'), get_comment_date(),  get_comment_time()) ?></a><?php edit_comment_link(__('(Edit)'),'  ','' );
		?>
	</div>

	<?php comment_text() ?>

	<div class="reply">
	<?php comment_reply_link(array_merge( $args, array('add_below' => $add_below, 'depth' => $depth, 'max_depth' => $args['max_depth']))) ?>
	</div>
	<?php if ( 'div' != $args['style'] ) : ?>
	</div>
	<?php endif; ?>
<?php }

/*------------------------------------*\
	Actions + Filters + ShortCodes
\*------------------------------------*/

// Add Actions
add_action('init', 'html5blank_header_scripts'); // Add Custom Scripts to wp_head
add_action('wp_print_scripts', 'html5blank_conditional_scripts'); // Add Conditional Page Scripts
add_action('get_header', 'enable_threaded_comments'); // Enable Threaded Comments
add_action('wp_enqueue_scripts', 'html5blank_styles'); // Add Theme Stylesheet
add_action('init', 'register_html5_menu'); // Add HTML5 Blank Menu
add_action('init', 'create_post_type_html5'); // Add our Portfolio Type
add_action('widgets_init', 'my_remove_recent_comments_style'); // Remove inline Recent Comment Styles from wp_head()
add_action('init', 'html5wp_pagination'); // Add our HTML5 Pagination

// Remove Actions
remove_action('wp_head', 'feed_links_extra', 3); // Display the links to the extra feeds such as category feeds
remove_action('wp_head', 'feed_links', 2); // Display the links to the general feeds: Post and Comment Feed
remove_action('wp_head', 'rsd_link'); // Display the link to the Really Simple Discovery service endpoint, EditURI link
remove_action('wp_head', 'wlwmanifest_link'); // Display the link to the Windows Live Writer manifest file.
remove_action('wp_head', 'index_rel_link'); // Index link
remove_action('wp_head', 'parent_post_rel_link', 10, 0); // Prev link
remove_action('wp_head', 'start_post_rel_link', 10, 0); // Start link
remove_action('wp_head', 'adjacent_posts_rel_link', 10, 0); // Display relational links for the posts adjacent to the current post.
remove_action('wp_head', 'wp_generator'); // Display the XHTML generator that is generated on the wp_head hook, WP version
remove_action('wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0);
remove_action('wp_head', 'rel_canonical');
remove_action('wp_head', 'wp_shortlink_wp_head', 10, 0);

// Add Filters
add_filter('avatar_defaults', 'html5blankgravatar'); // Custom Gravatar in Settings > Discussion
add_filter('body_class', 'add_slug_to_body_class'); // Add slug to body class (Starkers build)
add_filter('widget_text', 'do_shortcode'); // Allow shortcodes in Dynamic Sidebar
add_filter('widget_text', 'shortcode_unautop'); // Remove <p> tags in Dynamic Sidebars (better!)
add_filter('wp_nav_menu_args', 'my_wp_nav_menu_args'); // Remove surrounding <div> from WP Navigation
// add_filter('nav_menu_css_class', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> injected classes (Commented out by default)
// add_filter('nav_menu_item_id', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> injected ID (Commented out by default)
// add_filter('page_css_class', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> Page ID's (Commented out by default)
add_filter('the_category', 'remove_category_rel_from_category_list'); // Remove invalid rel attribute
add_filter('the_excerpt', 'shortcode_unautop'); // Remove auto <p> tags in Excerpt (Manual Excerpts only)
add_filter('the_excerpt', 'do_shortcode'); // Allows Shortcodes to be executed in Excerpt (Manual Excerpts only)
add_filter('excerpt_more', 'html5_blank_view_article'); // Add 'View Article' button instead of [...] for Excerpts
add_filter('show_admin_bar', 'remove_admin_bar'); // Remove Admin bar
add_filter('style_loader_tag', 'html5_style_remove'); // Remove 'text/css' from enqueued stylesheet
add_filter('post_thumbnail_html', 'remove_thumbnail_dimensions', 10); // Remove width and height dynamic attributes to thumbnails
add_filter('image_send_to_editor', 'remove_thumbnail_dimensions', 10); // Remove width and height dynamic attributes to post images

// Remove Filters
remove_filter('the_excerpt', 'wpautop'); // Remove <p> tags from Excerpt altogether

// Shortcodes above would be nested like this -
// [html5_shortcode_demo] [html5_shortcode_demo_2] Here's the page title! [/html5_shortcode_demo_2] [/html5_shortcode_demo]

include_once get_template_directory() . '/custom-post-types-portfolio.php';

/*------------------------------------*\
	ShortCode Functions
\*------------------------------------*/
// Shortcodes
add_shortcode('html5_shortcode_demo', 'html5_shortcode_demo'); // You can place [html5_shortcode_demo] in Pages, Posts now.
add_shortcode('portfolio', 'portfolio_func'); // Place [portfolio_func] in Pages, Posts now.

// Shortcode Demo with Nested Capability
function html5_shortcode_demo($atts, $content = null)
{
    return '<div class="shortcode-demo">' . do_shortcode($content) . '</div>'; // do_shortcode allows for nested Shortcodes
}

// Shortcode Demo with simple <h2> tag
function portfolio_func($atts, $content = null) // Demo Heading H2 shortcode, allows for nesting within above element. Fully expandable.
{
    ob_start();
    $portfolio = null;
    $taxonomy = 'portfolio';
    $Taxonomy_terms = get_terms($taxonomy);
    include( get_template_directory() . "/views/portfolio.php");
    wp_reset_query();  // Restore global post data stomped by the_post().
    return ob_get_clean();
}

function html5blank_extensionTinyMCE($init) {
    // Command separated string of extended elements
    $ext = 'span[id|name|class|style]';

    // Add to extended_valid_elements if it alreay exists
    if ( isset( $init['extended_valid_elements'] ) ) {
        $init['extended_valid_elements'] .= ',' . $ext;
    } else {
        $init['extended_valid_elements'] = $ext;
    }

    // Super important: return $init!
    return $init;
}
add_filter('tiny_mce_before_init', 'html5blank_extensionTinyMCE' );

/*
|-----------------------------
| Options
|-----------------------------
*/
include_once get_template_directory() . '/options.php';

/*
|-----------------------------
| Shortcodes
|-----------------------------
*/
// Buttons
function buttons( $atts, $content = null ) {
    extract( shortcode_atts( array(
    'class' => 'btn-secondary-outlined btn-lg', /* primary, default, info, success, danger, warning, inverse */
    'size' => '', /* mini, small, default, large */
    'url'  => '',
    'text' => '',
    'role' => 'button',
    'attributes' => '',
    'icon' => '',
    ), $atts ) );

    $output = '<a role="'.$role.'" href="' . $url . '" class="btn '. $class . '" ' . $attributes . '>';
    $output .= !empty($text) ? $text : $content;
    $output .= !empty($icon) ? '&nbsp;<i class="'.$icon.'"></i>' : '';
    $output .= '</a>';

    return $output;
}

add_shortcode('button', 'buttons');

// Alerts
function alerts( $atts, $content = null ) {
    extract( shortcode_atts( array(
    'type' => 'alert-info', /* alert-info, alert-success, alert-error */
    'close' => 'false', /* display close link */
    'text' => '',
    ), $atts ) );

    $output = '<div class="fade in alert alert-'. $type . '">';
    if($close == 'true') {
        $output .= '<a class="close" data-dismiss="alert">×</a>';
    }
    $output .= $text . '</div>';

    return $output;
}

add_shortcode('alert', 'alerts');

// Block Messages
function block_messages( $atts, $content = null ) {
    extract( shortcode_atts( array(
    'type' => 'alert-info', /* alert-info, alert-success, alert-error */
    'close' => 'false', /* display close link */
    'text' => '',
    ), $atts ) );

    $output = '<div class="fade in alert alert-block alert-'. $type . '">';
    if($close == 'true') {
        $output .= '<a class="close" data-dismiss="alert">×</a>';
    }
    $output .= '<p>' . $text . '</p></div>';

    return $output;
}

add_shortcode('block-message', 'block_messages');

// Block Messages
function blockquotes( $atts, $content = null ) {
    extract( shortcode_atts( array(
    'float' => '', /* left, right */
    'cite' => '', /* text for cite */
    ), $atts ) );

    $output = '<blockquote';
    if($float == 'left') {
        $output .= ' class="pull-left"';
    }
    elseif($float == 'right'){
        $output .= ' class="pull-right"';
    }
    $output .= '><p>' . $content . '</p>';

    if($cite){
        $output .= '<small>' . $cite . '</small>';
    }

    $output .= '</blockquote>';

    return $output;
}

add_shortcode('blockquote', 'blockquotes');


function get_the_custom_terms_as_string($id, $taxonomy="portfolio", $column="name", $glue=", ")
{
    $terms = get_the_terms( $id, $taxonomy );
    $str = [];
    foreach ($terms as $term) {
        $str[] = $term->$column;
    }
    return implode($glue, $str);
}
